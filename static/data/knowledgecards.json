{
  "all": [
    {
      "type": "Introduction",
      "category": "Intro to Vector Databases",
      "title": "Quickstart",
      "text": "Vectors are mathematical representations of data objects, which enable similarity-based searches in vector databases like Weaviate...",
      "link": "/developers/weaviate/quickstart",
      "tags": ["JS", "Weaviate", "Tutorial"]
    },
    {
      "type": "Introduction",
      "category": "Intro to Vector Databases",
      "title": "Vector Index",
      "photo": "",
      "text": "A vector index is a type of data structure for efficiently storing high-dimensional vector data generated by machine learning models. Its main purpose is facilitating quick and accurate similarity searches, using algorithms like trees or hashing to reduce complexity in high-dimensional spaces...",
      "link": "developers/weaviate/concepts/vector-index",
      "tags": ["JS", "Vector Databases", "Introduction"]
    },
    {
      "type": "Introduction",
      "category": "Intro to Vector Databases",
      "title": "Vector Index Image",
      "photo": "knowledge-vector.svg",
      "link": "/developers/weaviate/quickstart",
      "tags": ["JS", "Weaviate", "Image"]
    },
    {
      "type": "Search",
      "category": "Hybrid Search",
      "title": "Sparse Vectors",
      "photo": "hybrid-search-icon.svg",
      "text": "Sparse embeddings are generated from algorithms like BM25 and SPLADE...",
      "longText": "Sparse vectors are often high-dimensional with many zeros. Sparse embeddings are generated from algorithms like BM25 and SPLADE. These algorithms are used in keyword-based search to represent text documents.",
      "link": "/developers/weaviate/quickstart",
      "bloglink": "https://www.semi.technology/post/understanding-sparse-vectors",
      "doclink": "https://weaviate.io/developers/weaviate/api/graphql/additional-properties#score",
      "videolink": "https://www.youtube.com/watch?v=3JZ_D3ELwOQ",
      "tags": ["JS", "Weaviate", "Image"]
    },
    {
      "type": "Search",
      "category": "Hybrid Search",
      "title": "Graph-Based Index",
      "photo": "",
      "text": "HNSW is a graph-based indexing technique, meaning that it organizes the data points in a graph structure rather than traditional tree-based or hash-based structures. This graph-based approach is key to its performance in high-dimensional vector space searches.",
      "link": "developers/weaviate/concepts/vector-index",
      "tags": ["JS", "Vector Databases", "Introduction"]
    },
    {
      "type": "Search",
      "category": "Hybrid Search",
      "title": "Layered Navigation",
      "photo": "",
      "text": "During a search, HNSW starts at the topmost layer and makes 'big jumps' across the graph to quickly move closer to the target region. As it moves down the layers, the search becomes more refined, with smaller, more local jumps until the nearest neighbors are identified in the bottom layer.",
      "link": "/developers/weaviate/quickstart",
      "tags": ["JS", "Vector Databases", "Introduction"]
    },
    {
      "type": "Search",
      "category": "Hybrid Search",
      "title": "Hierarchical Graph Structure",
      "photo": "",
      "text": "HNSW utilizes a multi-layered graph structure where each layer is a graph of the data points. The top layers contain fewer points with long-range connections, and as you go down the layers, the number of points increases, and the connections become more local. This hierarchical structure allows for efficient navigation during search queries.",
      "link": "/developers/weaviate/introduction#how-does-weaviate-work",
      "tags": ["JS", "Vector Databases", "Introduction"]
    },
    {
      "type": "Search",
      "category": "Hybrid Search",
      "title": "Fusion Algorithm",
      "photo": "",
      "text": "In hybrid search, the fusion algorithm combines results from keyword and vector searches into a final list of ranked search results. A popular fusion algorithm is called reciprocal ranked fusion, which uses the sum of the inverse of the position of the results. There are multiple types of fusion algorithms. Weaviate supports reciprocal rank fusion and relative score fusion.",
      "link": "https://weaviate.io/developers/weaviate/api/graphql/additional-properties#score",
      "tags": ["JS", "Hybrid Search", "Introduction"]
    },
    {
      "type": "Databases",
      "category": "Databases",
      "title": "Inverted Indexes",
      "photo": "",
      "text": "An inverted index is a database indexing structure that maps keywords to their locations in documents, enabling fast full-text searches by listing all documents containing a given word, optimizing retrieval times. In Weaviate, it's used for keyword searches and fast filtering.",
      "link": "https://weaviate.io/developers/weaviate/api/graphql/additional-properties#score",
      "tags": ["Index", "Databases"]
    },
    {
      "type": "LLM",
      "category": "Intro to LLMs",
      "title": "Transformer",
      "photo": "",
      "text": "A transformer model is a type of neural network architecture designed to handle sequential data, like text, for tasks such as translation and question-answering. It's efficient and scalable, using attention mechanisms to weigh the importance of different parts of the input data.",
      "link": "https://weaviate.io/developers/weaviate/api/graphql/additional-properties#score",
      "tags": ["Index", "LLMS"]
    }
  ],
  "highlights": [
    {
      "type": "Image",
      "category": "Databases",
      "title": "Sparse Vectors",
      "photo": "vector-knowledge-01.svg",
      "link": "/developers/weaviate/quickstart",
      "tags": ["Concepts", "Engineering"]
    },
    {
      "type": "Image",
      "category": "Databases",
      "title": "Sparse Vectors",
      "photo": "vector-knowledge-02.svg",
      "link": "/developers/weaviate/quickstart",
      "tags": ["Concepts", "Engineering"]
    },
    {
      "type": "Image",
      "category": "Intro to Vector Databases",
      "title": "Sparse Vectors",
      "photo": "vector-knowledge-03.svg",
      "link": "/developers/weaviate/quickstart",
      "tags": ["Concepts", "Engineering"]
    }
  ]
}
